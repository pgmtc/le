version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.8 #

    working_directory: /go/src/github.com/pgmtc/orchard-cli

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory

      - restore_cache: # restores saved cache if no changes are detected since last run
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v1-pkg-cache

      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)

      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of explanation.
      - run: docker images
      - run: find /var/run
      - run: go get github.com/docker/docker/api
      - run: go get github.com/docker/docker/client
      - run: go get github.com/pkg/errors
      - run: go get golang.org/x/net/context
      - run: go get github.com/docker/go-connections/nat
      - run: go get github.com/Microsoft/go-winio
      - run: go get golang.org/x/sys/windows
      - run: go get github.com/fatih/color
      - run: go get github.com/olekukonko/tablewriter
      - run: go get github.com/jstemmer/go-junit-report
      - run: rm -rf /go/src/github.com/docker/docker/vendor/github.com/docker/go-connections

      - run:
          name: Run unit tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test | tee ${TEST_RESULTS}/go-test.out

      - run:
          name: Build
          command: make

      - run:
          name: Copy artifacts
          command: |
            mkdir /tmp/artifacts;
            cp build/orchard-linux-amd64 /tmp/artifacts;
            cp build/orchard-mac-amd64 /tmp/artifacts;
            cp build/orchard-windows-amd64 /tmp/artifacts;


      - save_cache: # Store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"

      - store_artifacts: #
          path: /tmp/artifacts

      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results