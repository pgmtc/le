// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pgmtc/le/pkg/common (interfaces: ConfigProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	common "github.com/pgmtc/le/pkg/common"
	reflect "reflect"
)

// MockConfigProvider is a mock of ConfigProvider interface
type MockConfigProvider struct {
	ctrl     *gomock.Controller
	recorder *MockConfigProviderMockRecorder
}

// MockConfigProviderMockRecorder is the mock recorder for MockConfigProvider
type MockConfigProviderMockRecorder struct {
	mock *MockConfigProvider
}

// NewMockConfigProvider creates a new mock instance
func NewMockConfigProvider(ctrl *gomock.Controller) *MockConfigProvider {
	mock := &MockConfigProvider{ctrl: ctrl}
	mock.recorder = &MockConfigProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigProvider) EXPECT() *MockConfigProviderMockRecorder {
	return m.recorder
}

// Config mocks base method
func (m *MockConfigProvider) Config() common.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Config")
	ret0, _ := ret[0].(common.Config)
	return ret0
}

// Config indicates an expected call of Config
func (mr *MockConfigProviderMockRecorder) Config() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Config", reflect.TypeOf((*MockConfigProvider)(nil).Config))
}

// CurrentProfile mocks base method
func (m *MockConfigProvider) CurrentProfile() common.Profile {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentProfile")
	ret0, _ := ret[0].(common.Profile)
	return ret0
}

// CurrentProfile indicates an expected call of CurrentProfile
func (mr *MockConfigProviderMockRecorder) CurrentProfile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentProfile", reflect.TypeOf((*MockConfigProvider)(nil).CurrentProfile))
}

// GetAvailableProfiles mocks base method
func (m *MockConfigProvider) GetAvailableProfiles() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAvailableProfiles")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetAvailableProfiles indicates an expected call of GetAvailableProfiles
func (mr *MockConfigProviderMockRecorder) GetAvailableProfiles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAvailableProfiles", reflect.TypeOf((*MockConfigProvider)(nil).GetAvailableProfiles))
}

// LoadConfig mocks base method
func (m *MockConfigProvider) LoadConfig() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadConfig")
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadConfig indicates an expected call of LoadConfig
func (mr *MockConfigProviderMockRecorder) LoadConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadConfig", reflect.TypeOf((*MockConfigProvider)(nil).LoadConfig))
}

// LoadProfile mocks base method
func (m *MockConfigProvider) LoadProfile(arg0 string) (common.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadProfile", arg0)
	ret0, _ := ret[0].(common.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadProfile indicates an expected call of LoadProfile
func (mr *MockConfigProviderMockRecorder) LoadProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadProfile", reflect.TypeOf((*MockConfigProvider)(nil).LoadProfile), arg0)
}

// SaveConfig mocks base method
func (m *MockConfigProvider) SaveConfig(arg0 bool) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveConfig", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveConfig indicates an expected call of SaveConfig
func (mr *MockConfigProviderMockRecorder) SaveConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveConfig", reflect.TypeOf((*MockConfigProvider)(nil).SaveConfig), arg0)
}

// SaveProfile mocks base method
func (m *MockConfigProvider) SaveProfile(arg0 string, arg1 common.Profile) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveProfile", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveProfile indicates an expected call of SaveProfile
func (mr *MockConfigProviderMockRecorder) SaveProfile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveProfile", reflect.TypeOf((*MockConfigProvider)(nil).SaveProfile), arg0, arg1)
}

// SetProfile mocks base method
func (m *MockConfigProvider) SetProfile(arg0 string, arg1 common.Profile) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetProfile", arg0, arg1)
}

// SetProfile indicates an expected call of SetProfile
func (mr *MockConfigProviderMockRecorder) SetProfile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetProfile", reflect.TypeOf((*MockConfigProvider)(nil).SetProfile), arg0, arg1)
}

// SetRepositoryPrefix mocks base method
func (m *MockConfigProvider) SetRepositoryPrefix(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetRepositoryPrefix", arg0)
}

// SetRepositoryPrefix indicates an expected call of SetRepositoryPrefix
func (mr *MockConfigProviderMockRecorder) SetRepositoryPrefix(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetRepositoryPrefix", reflect.TypeOf((*MockConfigProvider)(nil).SetRepositoryPrefix), arg0)
}
